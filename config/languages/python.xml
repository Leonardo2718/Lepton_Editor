<?xml version="1.0" encoding="UTF-8" ?>
<language name="Python" ext="py pyw">
    <tokenization>
        <keywords class="1">
            and as assert break class continue def del elif
            else except exec finally for from global if import
            in is lambda not or pass print raise return try
            while with yield False None True
        </keywords>
        <keywords class="2">
            ArithmeticError AssertionError AttributeError BaseException
            BufferError BytesWarning DeprecationWarning EOFError Ellipsis
            EnvironmentError Exception False FloatingPointError FutureWarning
            GeneratorExit IOError ImportError ImportWarning IndentationError
            IndexError KeyError KeyboardInterrupt LookupError MemoryError NameError
            None NotImplemented NotImplementedError OSError OverflowError
            PendingDeprecationWarning ReferenceError RuntimeError RuntimeWarning
            StandardError StopIteration SyntaxError SyntaxWarning SystemError
            SystemExit TabError True TypeError UnboundLocalError UnicodeDecodeError
            UnicodeEncodeError UnicodeError UnicodeTranslateError UnicodeWarning
            UserWarning ValueError Warning ZeroDivisionError __debug__ __doc__
            __import__ __name__ __package__ abs all any apply basestring bin bool
            buffer bytearray bytes callable chr classmethod cmp coerce compile
            complex copyright credits delattr dict dir divmod enumerate eval
            execfile exit file filter float format frozenset getattr globals hasattr
            hash help hex id input int intern isinstance issubclass iter len license
            list locals long map max memoryview min next object oct open ord pow
            print property quit range raw_input reduce reload repr reversed round
            set setattr slice sorted staticmethod str sum super tuple type unichr
            unicode vars xrange zip
        </keywords>
        <rule class="8" name="NUMBER">\b\d[A-Za-z]*</rule>
        <spanrule class="4" name="LINE_COMMENT">
            <open>#</open>
            <close>(\n)(?&lt;!\\)</close>
            <rule class="4" name="">.</rule>
        </spanrule>
        <spanrule class="10" name="DOCSTRING">
            <open>"""</open>
            <close>"""</close>
            <rule class="10" name="CHARACTER">.</rule>
        </spanrule>
        <spanrule class="6" name="STRING_LITERAL">
            <open>"</open>
            <close>"|(\n)</close>
            <rule class="7" name="ESCAPED_CHARACTER">\\.</rule>
            <rule class="6" name="">.</rule>
        </spanrule>
        <rule class="0" name="IDENTIFIER">\b[A-Za-z_][A-Za-z_0-9]*\b</rule>
    </tokenization>
</language>
